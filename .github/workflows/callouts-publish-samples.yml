name: Callouts publish samples

# Manually invoked. Permissions default to those with repo `write` access.
# https://docs.github.com/en/actions/using-workflows/manually-running-a-workflow
on: workflow_dispatch

# Default permissions are read only.
permissions: read-all

# Variables. The workflow also depends on secrets.GAR_TOKEN.
env:
  REGISTRY: us-docker.pkg.dev
  PROJECT: service-extensions-samples
  REPOSITORY: ${{ github.repository_owner == 'GoogleCloudPlatform' && 'callouts-source' || 'callouts-testing-source' }}

  # TODO matrix
  #IMAGE: wasm-tester

jobs:
  build-and-push-images:
    name: Publish callouts samples
    runs-on: ubuntu-latest

    # Permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read

    steps:
      # Get latest repo.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Authenticate to GAR.
      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: _json_key
          password: ${{ secrets.GAR_TOKEN }}

      # Get metadata: https://github.com/docker/metadata-action#about
      # The `images` value provides the base name for tags and labels.
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.PROJECT }}/${{ env.REPOSITORY }}/add_header_test
          tags: |
            type=ref,event=branch
            type=sha,prefix=public-image-,format=short
          labels: |
            org.opencontainers.image.title=add_header
            org.opencontainers.image.description=add_header callouts sample

      # Push Docker image: https://github.com/docker/build-push-action#about
      # Uses the `tags` and `labels` from the `meta` step.
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: ./callouts/python
          file: ./callouts/python/extproc/example/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            copy_path=extproc/example/add_header/
            run_module=service_callout_example

