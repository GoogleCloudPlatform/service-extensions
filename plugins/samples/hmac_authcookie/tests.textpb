env {
  time_secs: 1735614000  # Tue Dec 31 2024 03:00:00 GMT+0000
}
# No client X-Forwarded-For header set, forbidden request.
test {
  name: "NoXForwardedForHeader"
  request_headers {
    input {
      header { key: ":path" value: "/somepage/otherpage" }
      header { key: "Cookie" value: "SomeCookie=SomeValue; Authorization=48277f04685e364e0e3f3c4bfa78cb91293d304bbf196829334cb1c4a741d6b0" }
    }
    result {
      immediate {
        http_status: 403
        details: ""
        body { exact: "Access forbidden - missing client IP.\n" }
      }
      log { regex: ".*Access forbidden - missing client IP.$" }
    }
  }
}
# No client ip set, forbidden request.
test {
  name: "NoClientIP"
  request_headers {
    input {
      header { key: "X-Forwarded-For" value: "<existing-values>,<not-an-ip>,<not-an-ip-also>" }
      header { key: ":path" value: "/somepage/otherpage" }
      header { key: "Cookie" value: "SomeCookie=SomeValue; Authorization=48277f04685e364e0e3f3c4bfa78cb91293d304bbf196829334cb1c4a741d6b0" }
    }
    result {
      immediate {
        http_status: 403
        details: ""
        body { exact: "Access forbidden - missing client IP.\n" }
      }
      log { regex: ".*Access forbidden - missing client IP.$" }
    }
  }
}
# With a valid hash, request allowed.
# expiration_timestamp_nanos: 1735700400000000000 - Wed Jan 01 2025 03:00:00 GMT+0000
# client_ip: 127.0.0.1
# payload: client_ip,expiration_timestamp_nanos
# Authorization="Base64(payload)" + "." + "Base64(HMAC(payload))"
test {
  name: "WithValidHMACHash"
  request_headers {
    input {
      header { key: "X-Forwarded-For" value: "<existing-values>,127.0.0.1,<load-balancer-ip>" }
      header { key: ":path" value: "/somepage/otherpage" }
      header { key: "Cookie" value: "SomeCookie=SomeValue; Authorization=MTI3LjAuMC4xLDE3MzU3MDA0MDAwMDAwMDAwMDA.MThmNzliYzBhMzA3YzhiMmI4OTFiMTQ0NzNhMmFhNjljYWVkNGVmMzYwY2NiNTRjZTU3YWY0MTczZGMwMGZkNA" }
    }
    result {
      headers {
        has_header { key: ":path" value: "/somepage/otherpage" }
      }
    }
  }
}
# With an expired hash, forbidden request.
# expiration_timestamp_nanos: 1735527600000000000 - Mon Dec 30 2024 03:00:00 GMT+0000
# client_ip: 127.0.0.1
# payload: client_ip,expiration_timestamp_nanos
# Authorization="Base64(payload)" + "." + "Base64(HMAC(payload))"
test {
  name: "WithExpiredHMACHash"
  request_headers {
    input {
      header { key: "X-Forwarded-For" value: "<existing-values>,127.0.0.1,<load-balancer-ip>" }
      header { key: ":path" value: "/somepage/otherpage" }
      header { key: "Cookie" value: "SomeCookie=SomeValue; Authorization=MTI3LjAuMC4xLDE3MzU1Mjc2MDAwMDAwMDAwMDA.NWFlODcwYjBlMGNmM2JmODM1NjQwNjgyZjZhNWUyZTI4MDc5MGQ3ODgwMjBmOWI5NGQwYThhYzIxODc3YWM1Yg" }
    }
    result {
      immediate {
        http_status: 403
        details: ""
        body { exact: "Access forbidden - hash expired.\n" }
      }
      log { regex: ".*Access forbidden - hash expired.$" }
    }
  }
}
# With an invalid client IP, forbidden request.
# expiration_timestamp_nanos: 1735700400000000000 - Wed Jan 01 2025 03:00:00 GMT+0000
# client_ip: 127.0.0.1
# payload: client_ip,expiration_timestamp_nanos
# Authorization="Base64(payload)" + "." + "Base64(HMAC(payload))"
test {
  name: "WithInvalidClientIp"
  request_headers {
    input {
      header { key: "X-Forwarded-For" value: "<existing-values>,127.0.0.2,<load-balancer-ip>" }
      header { key: ":path" value: "/somepage/otherpage" }
      header { key: "Cookie" value: "SomeCookie=SomeValue; Authorization=MTI3LjAuMC4xLDE3MzU3MDA0MDAwMDAwMDAwMDA.MThmNzliYzBhMzA3YzhiMmI4OTFiMTQ0NzNhMmFhNjljYWVkNGVmMzYwY2NiNTRjZTU3YWY0MTczZGMwMGZkNA" }
    }
    result {
      immediate {
        http_status: 403
        details: ""
        body { exact: "Access forbidden - invalid client IP.\n" }
      }
      log { regex: ".*Access forbidden - invalid client IP.$" }
    }
  }
}
# With an invalid hash, forbidden request.
# expiration_timestamp_nanos: 1735700400000000000 - Wed Jan 01 2025 03:00:00 GMT+0000
# client_ip: 127.0.0.1
# payload: client_ip,expiration_timestamp_nanos
# Authorization="Base64(payload)" + "." + "Base64(HMAC(payload))"
test {
  name: "WithInvalidHMACHash"
  request_headers {
    input {
      header { key: "X-Forwarded-For" value: "<existing-values>,127.0.0.1,<load-balancer-ip>" }
      header { key: ":path" value: "/somepage/otherpage" }
      header { key: "Cookie" value: "SomeCookie=SomeValue; Authorization=MTI3LjAuMC4xLDE3MzU3MDA0MDAwMDAwMDAwMDA.MTI3LjAuMC4xLDE3MzU3MDA0MDAwMDAwMDAwMDA" }
    }
    result {
      immediate {
        http_status: 403
        details: ""
        body { exact: "Access forbidden - invalid HMAC hash.\n" }
      }
      log { regex: ".*Access forbidden - invalid HMAC hash.$" }
    }
  }
}
# No cookie set, forbidden request.
test {
  name: "NoCookie"
  request_headers {
    input {
      header { key: "X-Forwarded-For" value: "<existing-values>,127.0.0.1,<load-balancer-ip>" }
      header { key: ":path" value: "/admin" }
    }
    result {
      immediate {
        http_status: 403
        details: ""
        body { exact: "Access forbidden - missing HMAC cookie.\n" }
      }
      log { regex: ".*Access forbidden - missing HMAC cookie.$" }
    }
  }
}
# invalid cookie, forbidden request.
test {
  name: "InvalidCookie"
  request_headers {
    input {
      header { key: "X-Forwarded-For" value: "<existing-values>,127.0.0.1,<load-balancer-ip>" }
      header { key: ":path" value: "/somepage/otherpage" }
      header { key: "Cookie" value: "SomeCookie=SomeValue; Authorization=48277f04685e364e0e3f3c4bfa78cb91293d304bbf196829334cb1c4a741d6b0" }
    }
    result {
      immediate {
        http_status: 403
        details: ""
        body { exact: "Access forbidden - invalid HMAC cookie.\n" }
      }
      log { regex: ".*Access forbidden - invalid HMAC cookie.$" }
    }
  }
}