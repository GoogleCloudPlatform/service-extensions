test {
  name: "ContentInjection"
  num_chunks: 10
  response_body {
    input { content:  "<!DOCTYPE html>"
                      "<html>"
                      "<head>"
                      "<title>Page Title</title>"
                      "</head>"
                      "<body>"

                      "<h1>This is a Heading</h1>"
                      "<p>This is a paragraph.</p>"
                      "<div>"
                      "<a href=https://foo.com>website</a>"
                      "</div>"
                      "<a href=https://foo.com>website</a>"
                      "</body>"
                      "</html>"
    }
    result {
      body { exact: "<!DOCTYPE html>"
                    "<html>"
                    "<head>"
                    "<script src=\"https://www.foo.com/api.js\"></script>"
                    "<title>Page Title</title>"
                    "</head>"
                    "<body>"

                    "<h1>This is a Heading</h1>"
                    "<p>This is a paragraph.</p>"
                    "<div>"
                    "<a href=https://foo.com>website</a>"
                    "</div>"
                    "<a href=https://foo.com>website</a>"
                    "</body>"
                    "</html>"
      }
    }
  }
}
# Benchmark tests use different chunking parameters to show that CPU usage
# remains low and chunking only margianlly increases CPU usage.
test {
  name: "LargeBody1Chunk"
  num_chunks:1
  benchmark: true
  response_body {
    input { file: "response_body.data" }
    result { body { file: "expected_response_body.data" } }
  }
}
test {
  name: "LargeBody10Chunks"
  num_chunks:10
  benchmark: true
  response_body {
    input { file: "response_body.data" }
    result { body { file: "expected_response_body.data" } }
  }
}
test {
  name: "LargeBody50Chunks"
  num_chunks:50
  benchmark: true
  response_body {
    input { file: "response_body.data" }
    result { body { file: "expected_response_body.data" } }
  }
}
test {
  name: "LargeBody100Chunks"
  num_chunks:100
  benchmark: true
  response_body {
    input { file: "response_body.data" }
    result { body { file: "expected_response_body.data" } }
  }
}
