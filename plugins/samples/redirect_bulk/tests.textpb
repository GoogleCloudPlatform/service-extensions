# No matching domain, no redirect.
test {
  name: "NoRedirect"
  benchmark: false
  request_headers {
    input {
      header { key: ":authority" value: "example.com" }
      header { key: ":path" value: "/main/somepage/otherpage" }
      header { key: ":scheme" value: "https" }
    }
    result {
      has_header { key: ":path" value: "/main/somepage/otherpage" }
      no_header { key: "Location" }
    }
  }
}

# With matching domain, expect immediate redirect with http status code 301 and
# redirect to target domain with preserved path.
test {
  name: "DomainRedirect"
  benchmark: false
  plugin_config: "abc.com xyz.com"
  request_headers {
    input {
      header { key: ":authority" value: "abc.com" }
      header { key: ":path" value: "/images/picture.png" }
      header { key: ":scheme" value: "https" }
    }
    result {
      immediate { http_status: 301 details: "" }
      has_header { key: "Location" value: "https://xyz.com/images/picture.png" }
    }
  }
}

# With domain containing port, should still redirect.
test {
  name: "DomainWithPortRedirect"
  benchmark: false
  plugin_config: "abc.com xyz.com"
  request_headers {
    input {
      header { key: ":authority" value: "abc.com:8080" }
      header { key: ":path" value: "/api/v1/data" }
      header { key: ":scheme" value: "http" }
    }
    result {
      immediate { http_status: 301 details: "" }
      has_header { key: "Location" value: "http://xyz.com/api/v1/data" }
    }
  }
}

# Multiple domain mappings test.
test {
  name: "MultipleDomainMappings"
  benchmark: false
  plugin_config: "old-domain.com new-domain.com\nlegacy.example.org example.org"
  request_headers {
    input {
      header { key: ":authority" value: "legacy.example.org" }
      header { key: ":path" value: "/users/profile" }
      header { key: ":scheme" value: "https" }
    }
    result {
      immediate { http_status: 301 details: "" }
      has_header { key: "Location" value: "https://example.org/users/profile" }
    }
  }
}